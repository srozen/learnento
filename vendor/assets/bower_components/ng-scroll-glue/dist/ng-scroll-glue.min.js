!function(t){"use strict";function n(t,n,l){function r(t){var n=t;return{getValue:function(){return n},setValue:function(t){n=t}}}function e(t,n){return{getValue:function(){return t(n)},setValue:function(){}}}function c(t,n,l){return{getValue:function(){return t(l)},setValue:function(r){r!==t(l)&&l.$apply(function(){n(l,r)})}}}if(""!==n){var o=t(n);return void 0!==o.assign?c(o,o.assign,l):e(o,l)}return r(!0)}function l(t,l,r){t.directive(l,["$parse","$window","$timeout",function(t,e,c){return{priority:1,restrict:"A",link:function(o,i,u){function s(){f.getValue()&&!r.isAttached(a)&&r.scroll(a)}var f=n(t,u[l],o),a=i[0];o.$watch(s),c(s,0,!1),e.addEventListener("resize",s,!1),i.bind("scroll",function(){f.setValue(r.isAttached(a))})}}}])}var r={isAttached:function(t){return t.scrollTop+t.clientHeight+1>=t.scrollHeight},scroll:function(t){t.scrollTop=t.scrollHeight}},e={isAttached:function(t){return t.scrollTop<=1},scroll:function(t){t.scrollTop=0}},c={isAttached:function(t){return t.scrollLeft+t.clientWidth+1>=t.scrollWidth},scroll:function(t){t.scrollLeft=t.scrollWidth}},o={isAttached:function(t){return t.scrollLeft<=1},scroll:function(t){t.scrollLeft=0}},i=t.module("ngScrollGlue",[]);l(i,"scrollGlue",r),l(i,"scrollGlueTop",e),l(i,"scrollGlueBottom",r),l(i,"scrollGlueLeft",o),l(i,"scrollGlueRight",c)}(angular);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5nLXNjcm9sbC1nbHVlLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJjcmVhdGVBY3RpdmF0aW9uU3RhdGUiLCIkcGFyc2UiLCJhdHRyIiwic2NvcGUiLCJ1bmJvdW5kU3RhdGUiLCJpbml0VmFsdWUiLCJhY3RpdmF0ZWQiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwidmFsdWUiLCJvbmVXYXlCaW5kaW5nU3RhdGUiLCJnZXR0ZXIiLCJ0d29XYXlCaW5kaW5nU3RhdGUiLCJzZXR0ZXIiLCIkYXBwbHkiLCJ1bmRlZmluZWQiLCJhc3NpZ24iLCJjcmVhdGVEaXJlY3RpdmUiLCJtb2R1bGUiLCJhdHRyTmFtZSIsImRpcmVjdGlvbiIsImRpcmVjdGl2ZSIsIiR3aW5kb3ciLCIkdGltZW91dCIsInByaW9yaXR5IiwicmVzdHJpY3QiLCJsaW5rIiwiJGVsIiwiYXR0cnMiLCJzY3JvbGxJZkdsdWVkIiwiYWN0aXZhdGlvblN0YXRlIiwiaXNBdHRhY2hlZCIsImVsIiwic2Nyb2xsIiwiJHdhdGNoIiwiYWRkRXZlbnRMaXN0ZW5lciIsImJpbmQiLCJib3R0b20iLCJzY3JvbGxUb3AiLCJjbGllbnRIZWlnaHQiLCJzY3JvbGxIZWlnaHQiLCJ0b3AiLCJyaWdodCIsInNjcm9sbExlZnQiLCJjbGllbnRXaWR0aCIsInNjcm9sbFdpZHRoIiwibGVmdCJdLCJtYXBwaW5ncyI6IkNBWUMsU0FBVUEsR0FDVCxZQUVBLFNBQVNDLEdBQXNCQyxFQUFRQyxFQUFNQyxHQUMzQyxRQUFTQyxHQUFhQyxHQUNwQixHQUFJQyxHQUFZRCxDQUVoQixRQUNFRSxTQUFVLFdBQ1IsTUFBT0QsSUFHVEUsU0FBVSxTQUFVQyxHQUNsQkgsRUFBWUcsSUFLbEIsUUFBU0MsR0FBbUJDLEVBQVFSLEdBQ2xDLE9BQ0VJLFNBQVUsV0FDUixNQUFPSSxHQUFPUixJQUdoQkssU0FBVSxjQUlkLFFBQVNJLEdBQW1CRCxFQUFRRSxFQUFRVixHQUMxQyxPQUNFSSxTQUFVLFdBQ1IsTUFBT0ksR0FBT1IsSUFHaEJLLFNBQVUsU0FBVUMsR0FDZEEsSUFBVUUsRUFBT1IsSUFDbkJBLEVBQU1XLE9BQU8sV0FDWEQsRUFBT1YsRUFBT00sT0FPeEIsR0FBYSxLQUFUUCxFQUFhLENBQ2YsR0FBSVMsR0FBU1YsRUFBT0MsRUFFcEIsT0FBc0JhLFVBQWxCSixFQUFPSyxPQUNGSixFQUFtQkQsRUFBUUEsRUFBT0ssT0FBUWIsR0FFMUNPLEVBQW1CQyxFQUFRUixHQUdwQyxNQUFPQyxJQUFhLEdBSXhCLFFBQVNhLEdBQWdCQyxFQUFRQyxFQUFVQyxHQUN6Q0YsRUFBT0csVUFBVUYsR0FDZixTQUFVLFVBQVcsV0FFckIsU0FBVWxCLEVBQVFxQixFQUFTQyxHQUN6QixPQUNFQyxTQUFVLEVBQ1ZDLFNBQVUsSUFDVkMsS0FBTSxTQUFVdkIsRUFBT3dCLEVBQUtDLEdBSTFCLFFBQVNDLEtBQ0hDLEVBQWdCdkIsYUFBZWEsRUFBVVcsV0FBV0MsSUFDdERaLEVBQVVhLE9BQU9ELEdBTHJCLEdBQUlGLEdBQWtCOUIsRUFBc0JDLEVBQVEyQixFQUFNVCxHQUFXaEIsR0FDakU2QixFQUFLTCxFQUFJLEVBUWJ4QixHQUFNK0IsT0FBT0wsR0FFYk4sRUFBU00sRUFBZSxHQUFHLEdBRTNCUCxFQUFRYSxpQkFBaUIsU0FBVU4sR0FBZSxHQUVsREYsRUFBSVMsS0FBSyxTQUFVLFdBQ2pCTixFQUFnQnRCLFNBQVNZLEVBQVVXLFdBQVdDLFdBUTFELEdBQUlLLElBQ0ZOLFdBQVksU0FBVUMsR0FFcEIsTUFBT0EsR0FBR00sVUFBWU4sRUFBR08sYUFBZSxHQUFLUCxFQUFHUSxjQUdsRFAsT0FBUSxTQUFVRCxHQUNoQkEsRUFBR00sVUFBWU4sRUFBR1EsZUFJbEJDLEdBQ0ZWLFdBQVksU0FBVUMsR0FDcEIsTUFBT0EsR0FBR00sV0FBYSxHQUd6QkwsT0FBUSxTQUFVRCxHQUNoQkEsRUFBR00sVUFBWSxJQUlmSSxHQUNGWCxXQUFZLFNBQVVDLEdBQ3BCLE1BQU9BLEdBQUdXLFdBQWFYLEVBQUdZLFlBQWMsR0FBS1osRUFBR2EsYUFHbERaLE9BQVEsU0FBVUQsR0FDaEJBLEVBQUdXLFdBQWFYLEVBQUdhLGNBSW5CQyxHQUNGZixXQUFZLFNBQVVDLEdBQ3BCLE1BQU9BLEdBQUdXLFlBQWMsR0FHMUJWLE9BQVEsU0FBVUQsR0FDaEJBLEVBQUdXLFdBQWEsSUFJaEJ6QixFQUFTbkIsRUFBUW1CLE9BQU8sa0JBRTVCRCxHQUFnQkMsRUFBUSxhQUFjbUIsR0FDdENwQixFQUFnQkMsRUFBUSxnQkFBaUJ1QixHQUN6Q3hCLEVBQWdCQyxFQUFRLG1CQUFvQm1CLEdBQzVDcEIsRUFBZ0JDLEVBQVEsaUJBQWtCNEIsR0FDMUM3QixFQUFnQkMsRUFBUSxrQkFBbUJ3QixJQUUzQzNDIiwiZmlsZSI6Im5nLXNjcm9sbC1nbHVlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbmFtZSBBbmd1bGFySlMgU2Nyb2xsIEdsdWVcbiAqIEB0eXBlIEFuZ3VsYXJKUyBNb2R1bGVcbiAqIEB2ZXJzaW9uIDIuMC42XG4gKiBAYXV0aG9yIFNhbnRpYWdvIEcuIE1hcsOtbiA8c2FudGlhZ29AZmluYWxkZXZzdHVkaW8uY29tPlxuICogQGRlc2NyaXB0aW9uIEFuIEFuZ3VsYXJKcyBkaXJlY3RpdmUgdGhhdCBhdXRvbWF0aWNhbGx5IHNjcm9sbHMgdG8gdGhlIGJvdHRvbVxuICogICBvZiBhbiBlbGVtZW50IG9uIGNoYW5nZXMgaW4gaXQncyBzY29wZS4gVGhpcyBpcyBhIGZvcmsgb2YgTHVrYXMgV2VnbWFubidzXG4gKiAgIEFuZ3VsYXIgU2Nyb2xsIEdsdWUgKGh0dHBzOi8vZ2l0aHViLmNvbS9MdWVnZy9hbmd1bGFyanMtc2Nyb2xsLWdsdWUpLlxuICogQGxpY2Vuc2UgTUlUXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9zdGdvZ20vbmctc2Nyb2xsLWdsdWVcbiAqL1xuXG4oZnVuY3Rpb24gKGFuZ3VsYXIpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGZ1bmN0aW9uIGNyZWF0ZUFjdGl2YXRpb25TdGF0ZSgkcGFyc2UsIGF0dHIsIHNjb3BlKSB7XG4gICAgZnVuY3Rpb24gdW5ib3VuZFN0YXRlKGluaXRWYWx1ZSkge1xuICAgICAgdmFyIGFjdGl2YXRlZCA9IGluaXRWYWx1ZTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0VmFsdWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gYWN0aXZhdGVkO1xuICAgICAgICB9LFxuXG4gICAgICAgIHNldFZhbHVlOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICBhY3RpdmF0ZWQgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBvbmVXYXlCaW5kaW5nU3RhdGUoZ2V0dGVyLCBzY29wZSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0VmFsdWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gZ2V0dGVyKHNjb3BlKTtcbiAgICAgICAgfSxcblxuICAgICAgICBzZXRWYWx1ZTogZnVuY3Rpb24gKCkge31cbiAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdHdvV2F5QmluZGluZ1N0YXRlKGdldHRlciwgc2V0dGVyLCBzY29wZSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0VmFsdWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gZ2V0dGVyKHNjb3BlKTtcbiAgICAgICAgfSxcblxuICAgICAgICBzZXRWYWx1ZTogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgaWYgKHZhbHVlICE9PSBnZXR0ZXIoc2NvcGUpKSB7XG4gICAgICAgICAgICBzY29wZS4kYXBwbHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICBzZXR0ZXIoc2NvcGUsIHZhbHVlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG5cbiAgICBpZiAoYXR0ciAhPT0gXCJcIikge1xuICAgICAgdmFyIGdldHRlciA9ICRwYXJzZShhdHRyKTtcblxuICAgICAgaWYgKGdldHRlci5hc3NpZ24gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdHdvV2F5QmluZGluZ1N0YXRlKGdldHRlciwgZ2V0dGVyLmFzc2lnbiwgc2NvcGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG9uZVdheUJpbmRpbmdTdGF0ZShnZXR0ZXIsIHNjb3BlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHVuYm91bmRTdGF0ZSh0cnVlKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVEaXJlY3RpdmUobW9kdWxlLCBhdHRyTmFtZSwgZGlyZWN0aW9uKSB7XG4gICAgbW9kdWxlLmRpcmVjdGl2ZShhdHRyTmFtZSwgW1xuICAgICAgJyRwYXJzZScsICckd2luZG93JywgJyR0aW1lb3V0JyxcblxuICAgICAgZnVuY3Rpb24gKCRwYXJzZSwgJHdpbmRvdywgJHRpbWVvdXQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBwcmlvcml0eTogMSxcbiAgICAgICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgICAgIGxpbms6IGZ1bmN0aW9uIChzY29wZSwgJGVsLCBhdHRycykge1xuICAgICAgICAgICAgdmFyIGFjdGl2YXRpb25TdGF0ZSA9IGNyZWF0ZUFjdGl2YXRpb25TdGF0ZSgkcGFyc2UsIGF0dHJzW2F0dHJOYW1lXSwgc2NvcGUpO1xuICAgICAgICAgICAgdmFyIGVsID0gJGVsWzBdO1xuXG4gICAgICAgICAgICBmdW5jdGlvbiBzY3JvbGxJZkdsdWVkKCkge1xuICAgICAgICAgICAgICBpZiAoYWN0aXZhdGlvblN0YXRlLmdldFZhbHVlKCkgJiYgIWRpcmVjdGlvbi5pc0F0dGFjaGVkKGVsKSkge1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbi5zY3JvbGwoZWwpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHNjb3BlLiR3YXRjaChzY3JvbGxJZkdsdWVkKTtcblxuICAgICAgICAgICAgJHRpbWVvdXQoc2Nyb2xsSWZHbHVlZCwgMCwgZmFsc2UpO1xuXG4gICAgICAgICAgICAkd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHNjcm9sbElmR2x1ZWQsIGZhbHNlKTtcblxuICAgICAgICAgICAgJGVsLmJpbmQoJ3Njcm9sbCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgYWN0aXZhdGlvblN0YXRlLnNldFZhbHVlKGRpcmVjdGlvbi5pc0F0dGFjaGVkKGVsKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgXSk7XG4gIH1cblxuICB2YXIgYm90dG9tID0ge1xuICAgIGlzQXR0YWNoZWQ6IGZ1bmN0aW9uIChlbCkge1xuICAgICAgLy8gKyAxIGNhdGNoZXMgb2ZmIGJ5IG9uZSBlcnJvcnMgaW4gY2hyb21lXG4gICAgICByZXR1cm4gZWwuc2Nyb2xsVG9wICsgZWwuY2xpZW50SGVpZ2h0ICsgMSA+PSBlbC5zY3JvbGxIZWlnaHQ7XG4gICAgfSxcblxuICAgIHNjcm9sbDogZnVuY3Rpb24gKGVsKSB7XG4gICAgICBlbC5zY3JvbGxUb3AgPSBlbC5zY3JvbGxIZWlnaHQ7XG4gICAgfVxuICB9O1xuXG4gIHZhciB0b3AgPSB7XG4gICAgaXNBdHRhY2hlZDogZnVuY3Rpb24gKGVsKSB7XG4gICAgICByZXR1cm4gZWwuc2Nyb2xsVG9wIDw9IDE7XG4gICAgfSxcblxuICAgIHNjcm9sbDogZnVuY3Rpb24gKGVsKSB7XG4gICAgICBlbC5zY3JvbGxUb3AgPSAwO1xuICAgIH1cbiAgfTtcblxuICB2YXIgcmlnaHQgPSB7XG4gICAgaXNBdHRhY2hlZDogZnVuY3Rpb24gKGVsKSB7XG4gICAgICByZXR1cm4gZWwuc2Nyb2xsTGVmdCArIGVsLmNsaWVudFdpZHRoICsgMSA+PSBlbC5zY3JvbGxXaWR0aDtcbiAgICB9LFxuXG4gICAgc2Nyb2xsOiBmdW5jdGlvbiAoZWwpIHtcbiAgICAgIGVsLnNjcm9sbExlZnQgPSBlbC5zY3JvbGxXaWR0aDtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGxlZnQgPSB7XG4gICAgaXNBdHRhY2hlZDogZnVuY3Rpb24gKGVsKSB7XG4gICAgICByZXR1cm4gZWwuc2Nyb2xsTGVmdCA8PSAxO1xuICAgIH0sXG5cbiAgICBzY3JvbGw6IGZ1bmN0aW9uIChlbCkge1xuICAgICAgZWwuc2Nyb2xsTGVmdCA9IDA7XG4gICAgfVxuICB9O1xuXG4gIHZhciBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnbmdTY3JvbGxHbHVlJywgW10pO1xuXG4gIGNyZWF0ZURpcmVjdGl2ZShtb2R1bGUsICdzY3JvbGxHbHVlJywgYm90dG9tKTtcbiAgY3JlYXRlRGlyZWN0aXZlKG1vZHVsZSwgJ3Njcm9sbEdsdWVUb3AnLCB0b3ApO1xuICBjcmVhdGVEaXJlY3RpdmUobW9kdWxlLCAnc2Nyb2xsR2x1ZUJvdHRvbScsIGJvdHRvbSk7XG4gIGNyZWF0ZURpcmVjdGl2ZShtb2R1bGUsICdzY3JvbGxHbHVlTGVmdCcsIGxlZnQpO1xuICBjcmVhdGVEaXJlY3RpdmUobW9kdWxlLCAnc2Nyb2xsR2x1ZVJpZ2h0JywgcmlnaHQpO1xuXG59KGFuZ3VsYXIpKTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==